name: build

on:
  push:
    tags:
      - "*"
    branches:
      - main
    paths:
      - "Dockerfile"
      - "bin/**"
      - "version.txt"
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get properties
        id: props
        run: |
          IMAGE_VERSION=$(grep -Po 'org.opencontainers.image.version="\K.*?(?=")' Dockerfile)-dev
          IMAGE_URL=$(grep -Po 'org.opencontainers.image.url="\K.*?(?=")' Dockerfile)

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            IMAGE_VERSION=${GITHUB_REF#refs/tags/v}
          fi

          IMAGE="$IMAGE_URL:$IMAGE_VERSION"
          echo ::set-output name=image::${IMAGE}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.props.outputs.image }}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
