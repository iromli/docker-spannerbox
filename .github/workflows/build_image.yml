name: build-image

on:
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get properties
        id: props
        run: |
          OWNER_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)
          IMAGE_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2 |  sed 's/^docker-//g')

          MAIN_VERSION=$(cat version.txt | cut -d '-' -f 1)
          VERSION=${MAIN_VERSION}-dev

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi

          IMAGE="$OWNER_NAME/$IMAGE_NAME:$VERSION"
          echo ::set-output name=image::${IMAGE}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: github.event_name != 'pull_request'
          tags: steps.props.outputs.image
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
